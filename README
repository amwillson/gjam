This repo contains code written by AM Willson and I Shuman for Shuman et al. (in prep). The code uses GJAM to investigate the vegetation-environment relationship during the period of European settlement of the U.S. Midwest, as documented via the Public Land Surveys of the 19th century.

Data required to run the code is available in the GJAMDATA subdirectory. Outputs of the GJAM model and processed versions of the output are available in the out subdirectory. Any data or outputs not included in the repository are available upon request at this time.

The bulk of the repository is housed in the R subdirectory. The scripts within the R subdirectory are ordered according to the sequence of steps that should be taken to recreate the anlaysis. Descriptions of each step are as follows, and should be run in the following order:

0.SummaryFigures.R: This script produces the figures given in the supplement of Shuman et al. (in prep) which summarize the response and driver variables in space

1.Process.R: Takes tables of response (ydata) and driver (xdata) variables and formats them according to the format required by the gjam() function. The script conducts simple data checks before saving the output in an RData file.

2.Process_OOS.R: This script is identical to 1.Process.R but formats the out-of-sample data that will be used to validate the model in step 8.

2.Combine_marea.R: This step takes the output of 2.Process_OOS.R and matches each management area from the out-of-sample data with the nearest in-sample management area using Euclidean distance. This is necessary because the out-of-sample prediction must have only random effect groups that were present in the in-sample dataset.

3.Reduce.R: This script takes the output of 1.Process.R and reduces the number of individual taxa by grouping black gum, sweet gum, and black gum/sweet gum; poplar, tulip poplar, and poplar/tulip poplar; and any uncommon taxa with either other hardwood or other conifer. This reduces the dimensionality of the response variable to reduce the probability of overfitting and improve parameter inference.

3.Reduce_ecosystem.R: This script takes the output of 3.Reduce.R and further reduces the dimensions of the response variable to include only three ecosystem states: prairie, savanna, and forest. This again reduces overfitting and improves parameter inference.

4.Reduce_OOS.R: This script is identical to 3.Reduce.R for the out-of-sample data. The script takes the output of 2.Combine_marea.R as the input.

4.Reduce_OOS_ecosystem.R: This script is identical to 3.Reduce_ecosystem.R for the out-of-sample data. It takes the output of 4.Reduce_OOS.R as the input.

5.Run: This step is a folder with the run scripts for each of four simulation types. There are four subdirectories of 5.Run, each of which contains both the R script and a job submission script for running the simulations on the University of Notre Dame cluster computing system. The R scripts are set up in the same way and differ in two ways: (1) the data files that are called as inputs and (2) the covariates that are named as independent variables in the gjam formula.
    - All_taxa~all_cov_ASPECT calls the output of Reduce.R as the input. The formula includes all covariates: mean preicpitation, mean temperature, topographic slope, Saga Wetness Index, presence of hydric soils, presence of a floodplain, soil CaCO3 concentration, cation exchange capacity, soil sand content, soil clay content, soil water content, and topographic direction (north, south, east, west, or no aspect). The response variable is the joint presence or absence of each taxon.
    - All_taxa~all_cov_NOASPECT is the same as All_taxa~all_cov_ASPECT except that it does not include the topographic direction as an independent variable.
    - Reduced_taxa~all_cov_ASPECT calls the output of Reduce_ecosystem.R as the input. The formula includes all covariates: mean precipitaiton, mean temperature, topographic slope, Saga Wetness Index, presence of hydric soils, presence of a floodplain, soil CaCO3 concentration, cation exchange capacity, soil sand content, soil clay content, soil water content, and topographic direction (north, south, east, west, or no aspect). The response variable is the joint presence or absence of the three ecosystems (prairie, savanna, and forest).
    - Reduced_taxa~all_cov_NOASPECT is the same as Reduced_taxa~all_cov_ASPECT except that it does not include the topographic direction as an indpendent variable.

6.Combine.R: GJAM only allows for one chain to be run at a time. Given that the model is a Bayesian model relying on MCMC, multiple chains are useful for estimating the full uncertainty of the model and to reduce the impact of initial chain values on inference. We therefore ran the model 4 times using identical specifications in one of the simulations given in 5.Run and we then combine the chains into a more usable format here.

7.Visualize.R: This script produces figures used in Shuman et al. (in prep) for both taxon-level and ecosystem-level runs, depending on the input called into the script and the designation of "all" (taxon-level) or "reduced" (ecosystem-level) at the beginning of the script. The script uses the output of 6.Combine.R, but the specific input depends on the simulation of interest.

8.Predict_OOS.R: This script uses the model fit of one of the simulations from 5.Run to predict the out-of-sample data. The type of prediction here predicts the response variable only from the environmental covariates and does not take into account the covariance between taxa or ecosystem states. Visualization is included in the same script.

8.Predict_OOS_conditional.R: This script is similar to 8.Predict_OOS.R and uses the same inputs. The difference is that the type of prediction implemented in this script accounts for the covariance between taxa or ecosystem types, which we hypothesize will improve prediction.

utils.R: This script contains utility functions for the code. Specifically, there is a function for manually calculating the Gelman Rubin diagnostic for assessing chain convergence because our output is not in the proper format to use the default functions available in R. I additionally removed any identical chains (usually 2/4) from the output prior to calculating the diagnostic statistic. The identical chains are an artefact of the gjam function and cannot be avoided to the authors' knowledge. Removing the identical chains offers a more conservative view of chain convergence.